[{"path":"https://munch.cynkra.com/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://munch.cynkra.com/articles/data.html","id":"compact-tables","dir":"Articles","previous_headings":"","what":"Compact tables","title":"Mapping tables as CSV files","text":"representation consumes little space. source key mun_id_x may non-unique, case year_from year_to columns must consulted. 2005–2005: 2’769 rows (csv) 2005–2006: 2’776 rows (csv) 2005–2007: 2’785 rows (csv) 2005–2008: 2’787 rows (csv) 2005–2009: 2’806 rows (csv) 2005–2010: 2’812 rows (csv) 2005–2011: 2’820 rows (csv) 2005–2012: 2’829 rows (csv) 2005–2013: 2’849 rows (csv) 2005–2014: 2’860 rows (csv) 2005–2015: 2’869 rows (csv) 2005–2016: 2’875 rows (csv) 2005–2017: 2’880 rows (csv) 2005–2018: 2’885 rows (csv) 2005–2019: 2’889 rows (csv) 2005–2020: 2’892 rows (csv) 2005–2021: 2’901 rows (csv) 2005–2022: 2’906 rows (csv)","code":""},{"path":"https://munch.cynkra.com/articles/data.html","id":"flat-tables","dir":"Articles","previous_headings":"","what":"Flat tables","title":"Mapping tables as CSV files","text":"representation explicit. combination mun_id_x year guaranteed unique. 2005–2005: 2’769 rows (csv) 2005–2006: 5’515 rows (csv) 2005–2007: 8’242 rows (csv) 2005–2008: 10’963 rows (csv) 2005–2009: 13’603 rows (csv) 2005–2010: 16’203 rows (csv) 2005–2011: 18’758 rows (csv) 2005–2012: 21’257 rows (csv) 2005–2013: 23’669 rows (csv) 2005–2014: 26’025 rows (csv) 2005–2015: 28’353 rows (csv) 2005–2016: 30’651 rows (csv) 2005–2017: 32’909 rows (csv) 2005–2018: 35’134 rows (csv) 2005–2019: 37’349 rows (csv) 2005–2020: 39’554 rows (csv) 2005–2021: 41’729 rows (csv) 2005–2022: 43’880 rows (csv)","code":""},{"path":"https://munch.cynkra.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kirill Müller. Author, maintainer. Tobias Schieferdecker. Author. Thomas Knecht. Author. Christoph Sax. Contributor. Swiss Federal Statistical Office (SFSO), Swiss Statistics Web site. Copyright holder.","code":""},{"path":"https://munch.cynkra.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Müller K, Schieferdecker T, Knecht T (2022). munch: Functions working historicized list communes Switzerland. https://munch.cynkra.com/, https://github.com/cynkra/munch.","code":"@Manual{,   title = {munch: Functions for working with the historicized list of communes of Switzerland},   author = {Kirill Müller and Tobias Schieferdecker and Thomas Knecht},   year = {2022},   note = {https://munch.cynkra.com/, https://github.com/cynkra/munch}, }"},{"path":"https://munch.cynkra.com/index.html","id":"munch","dir":"","previous_headings":"","what":"Functions for working with the historicized list of\n    communes of Switzerland","title":"Functions for working with the historicized list of\n    communes of Switzerland","text":"Functions working historicized list communes Switzerland.","code":""},{"path":"https://munch.cynkra.com/index.html","id":"static-tables","dir":"","previous_headings":"","what":"Static tables","title":"Functions for working with the historicized list of\n    communes of Switzerland","text":"need install package use mapping table. Head https://cynkra.github.io/munch/articles/data.html get overview readily available matching files.","code":""},{"path":"https://munch.cynkra.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for working with the historicized list of\n    communes of Switzerland","text":"Install package GitHub via:","code":"devtools::install_github(\"cynkra/munch\")"},{"path":"https://munch.cynkra.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Functions for working with the historicized list of\n    communes of Switzerland","text":"Please note munch project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://munch.cynkra.com/reference/SwissBirths.html","id":null,"dir":"Reference","previous_headings":"","what":"Total births per municipality in Switzerland between 1969 and 2012 — SwissBirths","title":"Total births per municipality in Switzerland between 1969 and 2012 — SwissBirths","text":"row contains number births municipality   year.  municipalities present year due   changes definition municipalities.","code":""},{"path":"https://munch.cynkra.com/reference/SwissBirths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total births per municipality in Switzerland between 1969 and 2012 — SwissBirths","text":"","code":"SwissBirths"},{"path":"https://munch.cynkra.com/reference/SwissBirths.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Total births per municipality in Switzerland between 1969 and 2012 — SwissBirths","text":"data frame 105058 observations  4 variables:","code":"$ Year            : Factor w/ 44 levels \"1969\",\"1970\",..: 1 1 1 1 1 1 1 1 1 1 ...  $ MunicipalityID  : Factor w/ 2485 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 6 7 8 9 10 ...  $ MunicipalityName: Factor w/ 2485 levels \"Aeugst am Albis\",..: 1 2 3 4 5 6 7 8 9 10 ...  $ Births          : num  13 174 22 36 20 13 17 4 32 48 ..."},{"path":"https://munch.cynkra.com/reference/SwissBirths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Total births per municipality in Switzerland between 1969 and 2012 — SwissBirths","text":"STAT-TAB, section 01.2 \"Bevölkerung/Bevölkerungsstand und -bewegung\",   item \"Lebendgeburten nach institutionellen Gliederungen, Geschlecht und Staatsangehörigkeit des Kindes und nach Altersklasse der Mutter\". STAT-TAB URL: http://www.pxweb.bfs.admin.ch/Database/German_01%20-%20Bev%C3%B6lkerung/01.2%20-%20Bev%C3%B6lkerungsstand%20und%20-bewegung/01.2%20-%20Bev%C3%B6lkerungsstand%20und%20-bewegung.asp?lang=1&prod=01&secprod=2&openChild=true. File link: http://www.pxweb.bfs.admin.ch/Database/German_01%20-%20Bev%C3%B6lkerung/01.2%20-%20Bev%C3%B6lkerungsstand%20und%20-bewegung/px-d-01-2D02.px.","code":""},{"path":"https://munch.cynkra.com/reference/SwissBirths.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Total births per municipality in Switzerland between 1969 and 2012 — SwissBirths","text":"Swiss Federal Statistical Office","code":""},{"path":"https://munch.cynkra.com/reference/SwissPop.html","id":null,"dir":"Reference","previous_headings":"","what":"Census population by household size per commune in Switzerland between 1970 and 2000 — SwissPop","title":"Census population by household size per commune in Switzerland between 1970 and 2000 — SwissPop","text":"row contains number households municipality,   year household size.","code":""},{"path":"https://munch.cynkra.com/reference/SwissPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Census population by household size per commune in Switzerland between 1970 and 2000 — SwissPop","text":"","code":"SwissPop"},{"path":"https://munch.cynkra.com/reference/SwissPop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Census population by household size per commune in Switzerland between 1970 and 2000 — SwissPop","text":"STAT-TAB, section 40.1 \"Eidgenössische Volkszählung/1970--2000\",   item \"Privathaushalte nach Haushaltsgrösse und Region\". STAT-TAB URL: http://www.pxweb.bfs.admin.ch/Database/German_40%20-%20Eidgen%C3%B6ssische%20Volksz%C3%A4hlung/40.1%20-%201970-2000/40.1%20-%201970-2000.asp?lang=1&prod=40&secprod=1&openChild=true. File link: http://www.pxweb.bfs.admin.ch/Database/German_40%20-%20Eidgen%C3%B6ssische%20Volksz%C3%A4hlung/40.1%20-%201970-2000/px-d-40-1A01.px.","code":""},{"path":"https://munch.cynkra.com/reference/SwissPop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Census population by household size per commune in Switzerland between 1970 and 2000 — SwissPop","text":"Swiss Federal Statistical Office","code":""},{"path":"https://munch.cynkra.com/reference/add_past.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the past to original data — add_past","title":"Add the past to original data — add_past","text":"past searched mHistId.x origial file","code":""},{"path":"https://munch.cynkra.com/reference/add_past.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the past to original data — add_past","text":"","code":"add_past(x, mutations)"},{"path":"https://munch.cynkra.com/reference/add_past.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the past to original data — add_past","text":"x original data tibble. mutations Mutation file","code":""},{"path":"https://munch.cynkra.com/reference/add_past.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add the past to original data — add_past","text":"","code":"mutations <- swcGetMutations() #> Warning: `swcGetMutations()` was deprecated in munch 0.0.8. #> ℹ Please use `swc_get_mutations()` instead.  t <-   dplyr::filter(mutations, mId.y == 293)  t_1 <- dplyr::filter(t, mHistId.y == max(mHistId.y))  t_past <- add_past(t, mutations)"},{"path":"https://munch.cynkra.com/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated","title":"Deprecated functions — deprecated","text":"functions deprecated favor better alternatives.","code":""},{"path":"https://munch.cynkra.com/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated","text":"","code":"swcGetMapping(swc = NULL, ids.from, ids.to)  swcGetMutations(swc = NULL)"},{"path":"https://munch.cynkra.com/reference/download_mun_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"download latest municipality inventory — download_mun_inventory","title":"download latest municipality inventory — download_mun_inventory","text":"download latest municipality inventory","code":""},{"path":"https://munch.cynkra.com/reference/download_mun_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download latest municipality inventory — download_mun_inventory","text":"","code":"download_mun_inventory()"},{"path":"https://munch.cynkra.com/reference/munch-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for working with the historicized list of municipalities of\nSwitzerland — munch-package","title":"Functions for working with the historicized list of municipalities of\nSwitzerland — munch-package","text":"mutations Swiss municipalities tracked machine-readable mutation list.  allows guessing reference time given list municipality IDs, construct mappings two lists municipality IDs.  package provides functions import work mutation list. Contains historicized municipality data Switzerland 1960 onwards, \"Historisiertes Gemeindeverzeichnis\" Swiss Federal Statistical Office.","code":""},{"path":[]},{"path":"https://munch.cynkra.com/reference/munch-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functions for working with the historicized list of municipalities of\nSwitzerland — munch-package","text":"http://www.bfs.admin.ch/bfs/portal/de/index/infothek/nomenklaturen/blank/blank/gem_liste/02.html","code":""},{"path":[]},{"path":"https://munch.cynkra.com/reference/munch-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for working with the historicized list of municipalities of\nSwitzerland — munch-package","text":"Kirill Müller Maintainer: Kirill Müller <kirill@cynkra.com> URL: https://github.com/cynkra/munch Issue tracker: https://github.com/cynkra/munch/issues Maintainer: Kirill Müller krlmlr+r@mailbox.org Authors: Tobias Schieferdecker Thomas Knecht contributors: Christoph Sax [contributor] Swiss Federal Statistical Office (SFSO), Swiss Statistics Web site [copyright holder]","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","title":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","text":"two lists Swiss municipality IDs two points time, function creates data frame two columns row represents match municipality IDs.  can used intermediate table merging two data sets municipality identifiers taken different, possibly unknown, points time.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","text":"","code":"swc_get_mapping(ids_from, ids_to)"},{"path":"https://munch.cynkra.com/reference/swc_get_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","text":"ids_from list \"source\" municipality IDs, preferably factor ids_to list \"target\" municipality IDs, preferably factor","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","text":"data frame columns prefixed .   represents computed match.  municipality IDs stored   columns .mId .mId.  columns  .MergeType .MergeType contain valid   municipality contained input mapping table,  missing municipality missing input,  extra municipality input mapping   table; columns NA rows.  addition, column  MergeType offers summary \"\" \"\" status: Rows   values \"valid\" \"missing\" examined.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mapping.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","text":"advisable use factors list municipality IDs.  , comparisons merges municipality IDs automatically checked compatibility. Note \"\" list must earlier time \"\" list. Trying compute mapping way round results error. intentional: municipalities usually merged, makes sense use recent data set target mapping.  can also file suitable geometries allow visualization. two lists municipalities, construct mapping first list second.  First, probable mutation number \"municipality mutations\" data set computed.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a matching table between two lists of municipality IDs — swc_get_mapping","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(SwissPop) data(SwissBirths)  # Show mismatch of municipality IDs: ids_from <- with(SwissPop, MunicipalityID) ids_to <- with(SwissBirths, MunicipalityID) setdiff(ids_from, ids_to) #>   [1] \"327\"  \"328\"  \"330\"  \"343\"  \"384\"  \"531\"  \"601\"  \"618\"  \"621\"  \"752\"  #>  [11] \"753\"  \"851\"  \"854\"  \"862\"  \"864\"  \"882\"  \"887\"  \"926\"  \"933\"  \"974\"  #>  [21] \"984\"  \"986\"  \"994\"  \"1027\" \"1028\" \"1029\" \"1034\" \"1035\" \"1036\" \"1038\" #>  [31] \"1042\" \"1060\" \"1087\" \"1090\" \"1101\" \"1105\" \"1106\" \"1124\" \"1133\" \"1134\" #>  [41] \"1141\" \"1144\" \"1148\" \"1149\" \"1601\" \"1602\" \"1603\" \"1604\" \"1605\" \"1606\" #>  [51] \"1607\" \"1608\" \"1609\" \"1610\" \"1611\" \"1612\" \"1613\" \"1614\" \"1615\" \"1616\" #>  [61] \"1617\" \"1618\" \"1619\" \"1620\" \"1621\" \"1622\" \"1623\" \"1624\" \"1625\" \"1626\" #>  [71] \"1627\" \"1628\" \"1629\" \"2001\" \"2002\" \"2003\" \"2007\" \"2012\" \"2017\" \"2018\" #>  [81] \"2020\" \"2023\" \"2026\" \"2031\" \"2032\" \"2036\" \"2037\" \"2042\" \"2046\" \"2062\" #>  [91] \"2064\" \"2069\" \"2070\" \"2071\" \"2074\" \"2075\" \"2077\" \"2081\" \"2082\" \"2083\" #> [101] \"2085\" \"2088\" \"2091\" \"2092\" \"2093\" \"2094\" \"2095\" \"2100\" \"2101\" \"2103\" #> [111] \"2105\" \"2107\" \"2108\" \"2109\" \"2110\" \"2112\" \"2132\" \"2133\" \"2136\" \"2139\" #> [121] \"2141\" \"2142\" \"2144\" \"2146\" \"2150\" \"2151\" \"2154\" \"2156\" \"2158\" \"2159\" #> [131] \"2161\" \"2176\" \"2180\" \"2181\" \"2182\" \"2188\" \"2190\" \"2191\" \"2202\" \"2203\" #> [141] \"2204\" \"2210\" \"2214\" \"2215\" \"2219\" \"2227\" \"2229\" \"2232\" \"2241\" \"2247\" #> [151] \"2253\" \"2263\" \"2269\" \"2282\" \"2322\" \"2324\" \"2326\" \"2327\" \"2329\" \"2330\" #> [161] \"2331\" \"2332\" \"2443\" \"2447\" \"2460\" \"2494\" \"2496\" \"2531\" \"2552\" \"2905\" #> [171] \"2911\" \"2912\" \"2913\" \"2916\" \"2918\" \"2934\" \"3335\" \"3336\" \"3351\" \"3354\" #> [181] \"3355\" \"3357\" \"3371\" \"3376\" \"3406\" \"3523\" \"3573\" \"3591\" \"3600\" \"3601\" #> [191] \"3602\" \"3632\" \"3639\" \"3641\" \"3642\" \"3664\" \"3665\" \"3666\" \"3667\" \"3692\" #> [201] \"3702\" \"3704\" \"3706\" \"3709\" \"3710\" \"3771\" \"3773\" \"3774\" \"3775\" \"3776\" #> [211] \"3841\" \"3842\" \"3843\" \"3844\" \"3845\" \"3846\" \"3892\" \"3912\" \"3913\" \"3914\" #> [221] \"3915\" \"3928\" \"3930\" \"3942\" \"3943\" \"3944\" \"3971\" \"3973\" \"3984\" \"4011\" #> [231] \"4036\" \"4043\" \"4070\" \"4101\" \"4116\" \"4118\" \"4162\" \"4168\" \"4171\" \"4174\" #> [241] \"4178\" \"4180\" \"4225\" \"4278\" \"5011\" \"5016\" \"5031\" \"5032\" \"5033\" \"5034\" #> [251] \"5035\" \"5036\" \"5037\" \"5038\" \"5039\" \"5040\" \"5041\" \"5042\" \"5043\" \"5044\" #> [261] \"5045\" \"5046\" \"5047\" \"5062\" \"5065\" \"5066\" \"5067\" \"5068\" \"5069\" \"5070\" #> [271] \"5074\" \"5075\" \"5080\" \"5092\" \"5093\" \"5094\" \"5098\" \"5101\" \"5104\" \"5106\" #> [281] \"5107\" \"5110\" \"5111\" \"5114\" \"5116\" \"5122\" \"5123\" \"5127\" \"5128\" \"5134\" #> [291] \"5142\" \"5145\" \"5147\" \"5150\" \"5153\" \"5156\" \"5158\" \"5159\" \"5164\" \"5165\" #> [301] \"5168\" \"5169\" \"5175\" \"5177\" \"5179\" \"5182\" \"5183\" \"5184\" \"5185\" \"5188\" #> [311] \"5190\" \"5191\" \"5201\" \"5204\" \"5209\" \"5211\" \"5215\" \"5217\" \"5218\" \"5220\" #> [321] \"5223\" \"5228\" \"5232\" \"5234\" \"5235\" \"5241\" \"5244\" \"5245\" \"5246\" \"5247\" #> [331] \"5248\" \"5252\" \"5256\" \"5258\" \"5259\" \"5262\" \"5264\" \"5265\" \"5267\" \"5301\" #> [341] \"5302\" \"5303\" \"5305\" \"5306\" \"5308\" \"5311\" \"5312\" \"5313\" \"5314\" \"5316\" #> [351] \"5318\" \"5319\" \"5320\" \"5321\" \"5322\" \"5433\" \"5452\" \"5453\" \"5454\" \"5455\" #> [361] \"5457\" \"5459\" \"5460\" \"5461\" \"5462\" \"5463\" \"5517\" \"5519\" \"5524\" \"5525\" #> [371] \"5526\" \"5528\" \"5532\" \"5536\" \"5538\" \"5558\" \"5567\" \"5569\" \"5570\" \"5602\" #> [381] \"5603\" \"5605\" \"5608\" \"5612\" \"5630\" \"5641\" \"5647\" \"5677\" \"5681\" \"5687\" #> [391] \"5691\" \"5781\" \"5783\" \"5784\" \"5786\" \"5787\" \"5793\" \"5794\" \"5795\" \"5796\" #> [401] \"5797\" \"5800\" \"5801\" \"5802\" \"5811\" \"5814\" \"5815\" \"5818\" \"5820\" \"5823\" #> [411] \"5824\" \"5825\" \"5826\" \"5829\" \"5901\" \"5916\" \"5917\" \"5918\" \"5920\" \"5927\" #> [421] \"5936\" \"6051\" \"6059\" \"6060\" \"6062\" \"6063\" \"6065\" \"6066\" \"6067\" \"6070\" #> [431] \"6071\" \"6085\" \"6086\" \"6088\" \"6103\" \"6107\" \"6174\" \"6175\" \"6176\" \"6179\" #> [441] \"6180\" \"6196\" \"6200\" \"6231\" \"6233\" \"6237\" \"6245\" \"6247\" \"6251\" \"6457\" #> [451] \"6460\" \"6501\" \"6502\" \"6503\" \"6505\" \"6506\" \"6507\" \"6508\" \"6509\" \"6510\" #> [461] \"6746\" \"6747\" \"6749\" \"6752\" \"6755\" \"6756\" \"6772\" \"6777\" \"6779\" \"6780\" #> [471] \"6786\" \"6788\" \"6791\" \"6794\" \"6795\" \"6796\" \"6797\" \"6798\" \"6799\" \"6801\" #> [481] \"6802\" \"6804\" \"6805\" setdiff(ids_to, ids_from) #>  [1] \"632\"  \"756\"  \"855\"  \"888\"  \"948\"  \"1151\" \"1630\" \"1631\" \"1632\" \"2050\" #> [11] \"2051\" \"2052\" \"2114\" \"2115\" \"2116\" \"2162\" \"2233\" \"2234\" \"2235\" \"2337\" #> [21] \"2338\" \"2503\" \"3340\" \"3358\" \"3359\" \"3378\" \"3617\" \"3671\" \"3713\" \"3792\" #> [31] \"3847\" \"3931\" \"3932\" \"3955\" \"4049\" \"4184\" \"5048\" \"5049\" \"5050\" \"5137\" #> [41] \"5138\" \"5236\" \"5237\" \"5238\" \"5269\" \"5323\" \"5324\" \"5397\" \"5398\" \"5464\" #> [51] \"5540\" \"5541\" \"5571\" \"5613\" \"5804\" \"5805\" \"5831\" \"6074\" \"6075\" \"6076\" #> [61] \"6090\" \"6118\" \"6181\" \"6203\" \"6204\" \"6252\" \"6461\" \"6512\" \"6807\" \"6808\" #> [71] \"6809\" \"6810\"  # Compute mapping and count non-matching municipality IDs: mapping <- swc_get_mapping(ids_from = ids_from, ids_to = ids_to) #> 2022-11-08 08:28:40 INFO::meltMutations #> 2022-11-08 08:28:40 INFO::meltMutations #> 2022-11-08 08:28:40 INFO::computeMunList #> 2022-11-08 08:28:40 INFO::meltMutations #> 2022-11-08 08:28:40 INFO::meltMutations #> 2022-11-08 08:28:40 INFO::computeMunList with(mapping, sum(mapping$mIdAsNumber.from != mapping$mIdAsNumber.to)) #> [1] 487  # Communes that are \"missing\" are mostly lakes and other special communes: subset(mapping, MatchType == \"missing\")[, c(\"mIdAsNumber.from\", \"mShortName.from\")] #>      mIdAsNumber.from          mShortName.from #> 253              5238 C'za Corticiasca/Valcol. #> 2222             4510                   Sulgen  # These should be looked at in some detail, and fixed manually: subset(mapping, !(MatchType %in% c(\"valid\", \"missing\"))) #>     mHistId.from cAbbreviation.from mId.from #> 589        11250                 TI     <NA> #> 590        11251                 TI     <NA> #>                              mLongName.from          mShortName.from #> 589 C'za Bidogno/Sala Capriasca/Corticiasca C'za Bid./Sala C./Corti. #> 590     C'za Sala Capriasca/Vaglio/Lugaggia C'za Sala C./Vag./Lugag. #>     MatchType.from mHistId.to cAbbreviation.to mId.to mLongName.to #> 589        missing      14938               TI   5226    Capriasca #> 590        missing      14938               TI   5226    Capriasca #>     mShortName.to MatchType.to mIdAsNumber.from mIdAsNumber.to    MatchType #> 589     Capriasca        valid             5236           5226 missing.from #> 590     Capriasca        valid             5237           5226 missing.from  # Test for injectivity. The result shows that the mapping is almost injective, # only one \"from\" commune is mapped to more than one other \"to\" commune. # This situation requires further examination. mapping.dupes <- subset(mapping, duplicated(mIdAsNumber.from)) (noninjective.mapping <- subset(   mapping, mIdAsNumber.from %in% mapping.dupes$mIdAsNumber.from )) #>     mHistId.from cAbbreviation.from mId.from mLongName.from mShortName.from #> 610        11403                 TI     5246       Caneggio        Caneggio #> 611        11403                 TI     5246       Caneggio        Caneggio #>     MatchType.from mHistId.to cAbbreviation.to mId.to      mLongName.to #> 610          valid      14499               TI   5249 Castel San Pietro #> 611          valid      14974               TI   5269           Breggia #>         mShortName.to MatchType.to mIdAsNumber.from mIdAsNumber.to MatchType #> 610 Castel San Pietro        valid             5246           5249     valid #> 611           Breggia        valid             5246           5269     valid  # Simple treatment (just for this example): Remove duplicates, and use only # valid matches: cleaned.mapping <- subset(   mapping,   !duplicated(mIdAsNumber.from) & MatchType == \"valid\" )  # Now merge the two datasets based on the mapping table: SwissPop.1970 <- subset(SwissPop, Year == \"1970\") SwissPopMapping.1970 <- merge(SwissPop.1970,   cleaned.mapping[, c(\"mId.from\", \"mId.to\")],   by.x = \"MunicipalityID\", by.y = \"mId.from\" )  # Datasets from the \"from\" table must be suitably aggregated.  For the given # case of population totals we use the sum. SwissPopMapping.1970.agg <- group_by(   SwissPopMapping.1970,   mId.to,   HouseholdSize ) %>%   summarize(Households = sum(Households)) #> `summarise()` has grouped output by 'mId.to'. You can override using the #> `.groups` argument. with(SwissPopMapping.1970.agg, stopifnot(   length(unique(mId.to)) * length(levels(HouseholdSize)) ==     length(mId.to) ))  # The aggregated \"from\" dataset now can be merged with the \"to\" dataset: SwissBirths.1970 <- subset(SwissBirths, Year == \"1970\") SwissPopBirths.1970 <- merge(SwissPopMapping.1970.agg, SwissBirths.1970,   by.x = \"mId.to\", by.y = \"MunicipalityID\" )  # Some more communes are still missing from the 1970 statistics, although # the matches are valid: subset(mapping, mIdAsNumber.to %in% setdiff(   SwissPopMapping.1970.agg$mId.to, SwissBirths.1970$MunicipalityID ))[   ,   c(\"mId.from\", \"mShortName.from\", \"MatchType\") ] #>      mId.from          mShortName.from MatchType #> 16       3533                Marmorera     valid #> 30       3503                   Mutten     valid #> 36       3593                    Duvin     valid #> 42       3583                  Schnaus     valid #> 48       3577                    Luven     valid #> 122      3803                  Braggio     valid #> 135      3806                    Cauco     valid #> 146      3743                    Lavin     valid #> 147      3742                   Guarda     valid #> 176      3811                    Selma     valid #> 197      3631                   Almens     valid #> 198      3616        Waltensburg/Vuorz     valid #> 217      3711                Rongellen     valid #> 220      3708                   Mathon     valid #> 221      3707                Lohn (GR)     valid #> 222      3706             Innerferrera     valid #> 226      3702            Ausserferrera     valid #> 234      3670                   Urmein     valid #> 235      3669               Tschappina     valid #> 346      5129                  Sonogno     valid #> 390      5688                    Syens     valid #> 439      5732                     Vich     valid #> 441      5233             Vico Morcote     valid #> 452      5690         Villars-le-Comte     valid #> 455      5651     Villars-Sainte-Croix     valid #> 458      5935           Villars-Epeney     valid #> 479      3923                  Castiel     valid #> 549      5650          Vaux-sur-Morges     valid #> 576      5932                   Ursins     valid #> 591      5173                  Certara     valid #> 609      5307      Campo (Vallemaggia)     valid #> 627      2008           Châtillon (FR)     valid #> 641      5475      Chavannes-le-Veyron     valid #> 650      5906                  Chanéaz     valid #> 720      5668                   Cremin     valid #> 728      5479                 Cuarnens     valid #> 816      5102                  Corippo     valid #> 933      5621                   Aclens     valid #> 976      6172                   Bister     valid #> 980      5155                    Bogno     valid #> 983      4302                  Böbikon     valid #> 985      5747                 Bofflens     valid #> 992      5622                Bremblens     valid #> 999      5096     Brione sopra Minusio     valid #> 1049     5513           Bioley-Orjulaz     valid #> 1224     5109                   Gresso     valid #> 1247     2079               Grangettes     valid #> 1315     5671           Dompierre (VD)     valid #> 1427     4106                  Mönthal     valid #> 1500     5488                   Mauraz     valid #> 1502     4314                 Mellikon     valid #> 1503      389                Meienried     valid #> 1512     5012                   Moleno     valid #> 1540     6216                 Mex (VS)     valid #> 1730     6109                    Inden     valid #> 1800     6178               Martisberg     valid #> 1803     5676             Martherenges     valid #> 1872     5315                 Linescio     valid #> 1911     5564                 Novalles     valid #> 1964     5798                   Ropraz     valid #> 2016     5081                   Sobrio     valid #> 2031     5762                   Sergey     valid #> 2042     5686                  Sarzens     valid #> 2167     2216           Pierrafortscha     valid #> 2372      532                Bangerten     valid #> 2375      535 Deisswil b. Münchenbuch.     valid #> 2455      629              Oberhünigen     valid #> 2464     4084                Islisberg     valid #> 2467      362                  Ittigen     valid #> 2468      363            Ostermundigen     valid #> 2474     6716               Mettembert     valid #> 2476     3613                   Pigniu     valid #> 2521     2522                 Hersiwil     valid #> 2540     4826                  Mammern     valid #> 2541      631                Trimstein     valid #> 2542      630             Allmendingen     valid #> 2550     4643              Bottighofen     valid #> 2576     2851           Kilchberg (BL)     valid #> 2805      972                   Berken     valid #> 2835     4621          Warth-Weiningen     valid #> 2839     4716               Bettwiesen     valid #> 2860     6728                 Vellerat     valid #> 2865     4724                Eschlikon     valid #> 2881     4786               Wilen (TG)     valid #> 2887     4546             Schlatt (TG)     valid #> 2891     4723                  Braunau     valid  # The \"from\" list must be from an earlier time than the \"to\" list. try(swc_get_mapping(ids_from = ids_to, ids_to = ids_from)) #> 2022-11-08 08:28:46 INFO::meltMutations #> 2022-11-08 08:28:46 INFO::meltMutations #> 2022-11-08 08:28:46 INFO::computeMunList #> 2022-11-08 08:28:46 INFO::meltMutations #> 2022-11-08 08:28:46 INFO::meltMutations #> 2022-11-08 08:28:46 INFO::computeMunList #> Error in getMunicipalityMappingWorker(mutations, hist.list.from, mid.from,  :  #>   mid.from <= mid.to is not TRUE"},{"path":"https://munch.cynkra.com/reference/swc_get_merger_mapping_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mapping table for a certain time interval — swc_get_merger_mapping_table","title":"Create mapping table for a certain time interval — swc_get_merger_mapping_table","text":"Produces mapping table can joined data. Municipalities merged another municipality given time period mapped municipality. Filtering canton supported.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_merger_mapping_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mapping table for a certain time interval — swc_get_merger_mapping_table","text":"","code":"swc_get_merger_mapping_table(   start_year,   end_year,   canton = NULL,   type = \"flat\" )"},{"path":"https://munch.cynkra.com/reference/swc_get_merger_mapping_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create mapping table for a certain time interval — swc_get_merger_mapping_table","text":"start_year First year time interval (integer) end_year Last year time interval (integer) canton Canton abbreviation character (e.g. \"GE\", \"ZH\", \"TI\", etc.) focus . left `NULL` (default) cantons considered. type Two options: - \"flat\" (default) returns table one row per year per mapping - \"compact\" returns compact table one row per mapping,   containing time interval valid ","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_merger_mapping_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mapping table for a certain time interval — swc_get_merger_mapping_table","text":"Mapping table given time interval specified canton","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_merger_mapping_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mapping table for a certain time interval — swc_get_merger_mapping_table","text":"","code":"swc_get_merger_mapping_table(2005, 2010) #> # A tibble: 16,203 × 5 #>     year mun_id_x short_name_x       mun_id_y short_name_y       #>    <dbl>    <int> <chr>                 <int> <chr>              #>  1  2005        1 Aeugst am Albis           1 Aeugst am Albis    #>  2  2005        2 Affoltern am Albis        2 Affoltern am Albis #>  3  2005        3 Bonstetten                3 Bonstetten         #>  4  2005        4 Hausen am Albis           4 Hausen am Albis    #>  5  2005        5 Hedingen                  5 Hedingen           #>  6  2005        6 Kappel am Albis           6 Kappel am Albis    #>  7  2005        7 Knonau                    7 Knonau             #>  8  2005        8 Maschwanden               8 Maschwanden        #>  9  2005        9 Mettmenstetten            9 Mettmenstetten     #> 10  2005       10 Obfelden                 10 Obfelden           #> # … with 16,193 more rows swc_get_merger_mapping_table(2015, 2019, canton = \"ZH\", type = \"compact\") #> # A tibble: 174 × 6 #>    year_from year_to mun_id_x short_name_x       mun_id_y short_name_y       #>        <dbl>   <dbl>    <int> <chr>                 <int> <chr>              #>  1      2015    2019        1 Aeugst am Albis           1 Aeugst am Albis    #>  2      2015    2019        2 Affoltern am Albis        2 Affoltern am Albis #>  3      2015    2019        3 Bonstetten                3 Bonstetten         #>  4      2015    2019        4 Hausen am Albis           4 Hausen am Albis    #>  5      2015    2019        5 Hedingen                  5 Hedingen           #>  6      2015    2019        6 Kappel am Albis           6 Kappel am Albis    #>  7      2015    2019        7 Knonau                    7 Knonau             #>  8      2015    2019        8 Maschwanden               8 Maschwanden        #>  9      2015    2019        9 Mettmenstetten            9 Mettmenstetten     #> 10      2015    2019       10 Obfelden                 10 Obfelden           #> # … with 164 more rows"},{"path":"https://munch.cynkra.com/reference/swc_get_mun_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Get municipality mutation history — swc_get_mun_history","title":"Get municipality mutation history — swc_get_mun_history","text":"history goes back far mutation number becocmes 1000   (first time registration)","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mun_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get municipality mutation history — swc_get_mun_history","text":"","code":"swc_get_mun_history(munId)"},{"path":"https://munch.cynkra.com/reference/swc_get_mun_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get municipality mutation history — swc_get_mun_history","text":"munId Municipality Id integer","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mun_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get municipality mutation history — swc_get_mun_history","text":"","code":"waedenswil_history <- swc_get_mun_history(293)"},{"path":"https://munch.cynkra.com/reference/swc_get_mun_merges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get municipality merges for a certain year and cantona — swc_get_mun_merges","title":"Get municipality merges for a certain year and cantona — swc_get_mun_merges","text":"Get municipality merges certain year cantona","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mun_merges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get municipality merges for a certain year and cantona — swc_get_mun_merges","text":"","code":"swc_get_mun_merges(year = NULL, canton = NULL)"},{"path":"https://munch.cynkra.com/reference/swc_get_mun_merges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get municipality merges for a certain year and cantona — swc_get_mun_merges","text":"year year merges took place canton abbreviation characger canton merges returned. NULL, merges returned","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mun_merges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get municipality merges for a certain year and cantona — swc_get_mun_merges","text":"","code":"zuerich_merges <- swc_get_mun_merges(year = 2019, canton = \"ZH\")"},{"path":"https://munch.cynkra.com/reference/swc_get_municipality_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Existing municipalities in a specified year — swc_get_municipality_state","title":"Existing municipalities in a specified year — swc_get_municipality_state","text":"function produces tibble containing names BFS-numbers (official municipality numbers) existing municipalities given year. Filtering canton supported.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_municipality_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Existing municipalities in a specified year — swc_get_municipality_state","text":"","code":"swc_get_municipality_state(year, canton = NULL)"},{"path":"https://munch.cynkra.com/reference/swc_get_municipality_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Existing municipalities in a specified year — swc_get_municipality_state","text":"year Year interest (integer). canton Canton abbreviation character (e.g. \"GE\", \"ZH\", \"TI\", etc.) focus . left `NULL` (default) cantons considered.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_municipality_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Existing municipalities in a specified year — swc_get_municipality_state","text":"Tibble containing municipality numbers (BFS-numbers) names existing municipalities given year.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_municipality_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Existing municipalities in a specified year — swc_get_municipality_state","text":"","code":"swc_get_municipality_state(1987) #> # A tibble: 3,028 × 2 #>    mun_id short_name         #>     <int> <chr>              #>  1      1 Aeugst am Albis    #>  2      2 Affoltern am Albis #>  3      3 Bonstetten         #>  4      4 Hausen am Albis    #>  5      5 Hedingen           #>  6      6 Kappel am Albis    #>  7      7 Knonau             #>  8      8 Maschwanden        #>  9      9 Mettmenstetten     #> 10     10 Obfelden           #> # … with 3,018 more rows swc_get_municipality_state(2000, \"ZH\") #> # A tibble: 171 × 2 #>    mun_id short_name         #>     <int> <chr>              #>  1      1 Aeugst am Albis    #>  2      2 Affoltern am Albis #>  3      3 Bonstetten         #>  4      4 Hausen am Albis    #>  5      5 Hedingen           #>  6      6 Kappel am Albis    #>  7      7 Knonau             #>  8      8 Maschwanden        #>  9      9 Mettmenstetten     #> 10     10 Obfelden           #> # … with 161 more rows"},{"path":"https://munch.cynkra.com/reference/swc_get_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of municipality mutations — swc_get_mutations","title":"Create a list of municipality mutations — swc_get_mutations","text":"Municipality mutation lists required compute matching tables municipalities different points time.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of municipality mutations — swc_get_mutations","text":"","code":"swc_get_mutations(mids = NULL, canton = NULL)"},{"path":"https://munch.cynkra.com/reference/swc_get_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of municipality mutations — swc_get_mutations","text":"mids list municipality id's (BFS-numbers) mutations retrieved. canton Canton abbreviation character (e.g. \"GE\", \"ZH\", \"TI\", etc.) focus . left `NULL` (default) cantons considered.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list of municipality mutations — swc_get_mutations","text":"data frame represents mutations.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mutations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a list of municipality mutations — swc_get_mutations","text":"municipality dataset Swiss historicized communes data list snapshots municipality states.  state valid certain period time, adjoining states linked admission abolition numbers:  abolition number former state admission number subsequent state.  states can thought nodes graph, edges mutations -- transformations one state next. function performs self-merge municipality data: abolition number matched corresponding admission number (available).  corresponding admission abolition number found, record included NAs instead matched values.  Records without admission abolition number excluded. result list mutations, .e., list edges graph municipality state snapshots.","code":""},{"path":"https://munch.cynkra.com/reference/swc_get_mutations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list of municipality mutations — swc_get_mutations","text":"","code":"head(swc_get_mutations(), 20) #> # A tibble: 20 × 16 #>    mMutati…¹ cAbbr…² mHist…³ mId.x mShor…⁴ mAbol…⁵ mAboliti…⁶ mDateOfC…⁷ mHist…⁸ #>        <int> <chr>     <int> <int> <chr>   <chr>   <date>     <date>       <int> #>  1      1000 NA           NA    NA NA      NA      NA         NA           11348 #>  2      1000 NA           NA    NA NA      NA      NA         NA           11742 #>  3      1000 NA           NA    NA NA      NA      NA         NA           11801 #>  4      1000 NA           NA    NA NA      NA      NA         NA           11992 #>  5      1000 NA           NA    NA NA      NA      NA         NA           12249 #>  6      1000 NA           NA    NA NA      NA      NA         NA           12671 #>  7      1000 NA           NA    NA NA      NA      NA         NA           12674 #>  8      1000 NA           NA    NA NA      NA      NA         NA           12738 #>  9      1000 NA           NA    NA NA      NA      NA         NA           12433 #> 10      1000 NA           NA    NA NA      NA      NA         NA           12497 #> 11      1000 NA           NA    NA NA      NA      NA         NA           13124 #> 12      1000 NA           NA    NA NA      NA      NA         NA           12891 #> 13      1000 NA           NA    NA NA      NA      NA         NA           10575 #> 14      1000 NA           NA    NA NA      NA      NA         NA           11349 #> 15      1000 NA           NA    NA NA      NA      NA         NA           11735 #> 16      1000 NA           NA    NA NA      NA      NA         NA           11862 #> 17      1000 NA           NA    NA NA      NA      NA         NA           11855 #> 18      1000 NA           NA    NA NA      NA      NA         NA           11480 #> 19      1000 NA           NA    NA NA      NA      NA         NA           11573 #> 20      1000 NA           NA    NA NA      NA      NA         NA           12182 #> # … with 7 more variables: mId.y <int>, mShortName.y <chr>, #> #   mAdmissionMode <chr>, mAdmissionDate <date>, mDateOfChange.y <date>, #> #   mMutationDate <date>, mMutationId <ord>, and abbreviated variable names #> #   ¹​mMutationNumber, ²​cAbbreviation, ³​mHistId.x, ⁴​mShortName.x, #> #   ⁵​mAbolitionMode, ⁶​mAbolitionDate, ⁷​mDateOfChange.x, ⁸​mHistId.y head(subset(swc_get_mutations(), !is.na(mHistId.x)), 20) #> # A tibble: 20 × 16 #>    mMutati…¹ cAbbr…² mHist…³ mId.x mShor…⁴ mAbol…⁵ mAboliti…⁶ mDateOfC…⁷ mHist…⁸ #>        <int> <chr>     <int> <int> <chr>   <chr>   <date>     <date>       <int> #>  1      1001 VD        11248  5512 Bercher Reassi… 1960-12-31 1960-12-31   13186 #>  2      1002 SO        11245  2451 Ichert… Abolit… 1960-12-31 1960-12-31   13187 #>  3      1002 SO        11244  2455 Lüterk… Abolit… 1960-12-31 1960-12-31   13187 #>  4      1003 VD        11242  5625 Bussy-… Abolit… 1961-03-31 1961-03-31   13188 #>  5      1003 VD        11243  5626 Chardo… Abolit… 1961-03-31 1961-03-31   13188 #>  6      1004 AG        11240  4021 Baden   Change… 1961-12-31 1961-12-31   13189 #>  7      1004 AG        11227  4025 Dättwil Abolit… 1961-12-31 1961-12-31   13189 #>  8      1005 VD        11238  5886 Montre… Abolit… 1961-12-31 1961-12-31   13190 #>  9      1005 VD        11253  5887 Montre… Abolit… 1961-12-31 1961-12-31   13190 #> 10      1006 GR        11237  3972 Seewis… Change… 1961-12-31 1961-12-31   13191 #> 11      1007 GR        11236  3881 Conter… Change… 1961-12-31 1961-12-31   13192 #> 12      1008 FR        11235  2295 Grossb… Change… 1961-12-31 1961-12-31   13193 #> 13      1009 GR        11234  3982 Disent… Change… 1962-12-31 1962-12-31   13194 #> 14      1010 GR        11231  3597 Peiden  Abolit… 1963-05-23 1963-05-23   13195 #> 15      1010 GR        11230  3602 Uors (… Abolit… 1963-05-23 1963-05-23   13195 #> 16      1011 SH        11233  2935 Herbli… Abolit… 1963-12-31 1963-12-31   13196 #> 17      1011 SH        11232  2939 Schaff… Change… 1963-12-31 1963-12-31   13196 #> 18      1012 SG        11229  3404 Henau   Change… 1964-03-09 1964-03-09   13197 #> 19      1013 TG        11239  4756 Schönh… Change… 1964-05-31 1964-05-31   13198 #> 20      1013 TG        11266  4757 Toos    Abolit… 1964-05-31 1964-05-31   13198 #> # … with 7 more variables: mId.y <int>, mShortName.y <chr>, #> #   mAdmissionMode <chr>, mAdmissionDate <date>, mDateOfChange.y <date>, #> #   mMutationDate <date>, mMutationId <ord>, and abbreviated variable names #> #   ¹​mMutationNumber, ²​cAbbreviation, ³​mHistId.x, ⁴​mShortName.x, #> #   ⁵​mAbolitionMode, ⁶​mAbolitionDate, ⁷​mDateOfChange.x, ⁸​mHistId.y"},{"path":"https://munch.cynkra.com/reference/swc_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download municipality mutation data — swc_read_data","title":"Download municipality mutation data — swc_read_data","text":"Download municipality mutation data","code":""},{"path":"https://munch.cynkra.com/reference/swc_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download municipality mutation data — swc_read_data","text":"","code":"swc_read_data()"},{"path":"https://munch.cynkra.com/news/index.html","id":"munch-0089007-2022-05-23","dir":"Changelog","previous_headings":"","what":"munch 0.0.8.9007 (2022-05-23)","title":"munch 0.0.8.9007 (2022-05-23)","text":"Automatic data update 2022-05-01 (#58). Fix extraction Zip archive.","code":""},{"path":"https://munch.cynkra.com/news/index.html","id":"munch-0089006-2022-02-17","dir":"Changelog","previous_headings":"","what":"munch 0.0.8.9006 (2022-02-17)","title":"munch 0.0.8.9006 (2022-02-17)","text":"Automatically update mutation data GitHub Actions (#56). Use recent mutation data 2022 (#56). Update tests use testthat 3e (#51). Fix tests compatibility dev dplyr (#49). new internal function download lists municipalities date via API provided BFS. Rename munch (#21). Fix filter swc_get_mapping() correct results (#39). swc_read_data() now always fetches recent dataset (#20).","code":""}]
